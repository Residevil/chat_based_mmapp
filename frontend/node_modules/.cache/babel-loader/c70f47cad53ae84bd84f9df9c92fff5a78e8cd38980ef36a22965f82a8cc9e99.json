{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexa\\\\chat_based_mmapp\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport axios from 'axios';\nimport MindMap from './components/MindMap';\nimport ChatInterface from './components/ChatInterface';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\nconst SOCKET_URL = process.env.REACT_APP_SOCKET_URL || 'http://localhost:5000';\nconst socket = io(SOCKET_URL);\nfunction App() {\n  _s();\n  const [mindMap, setMindMap] = useState(null);\n  const [socketConnected, setSocketConnected] = useState(false);\n\n  // Error handling\n  useEffect(() => {\n    console.log('Attempting to connect to WebSocket...');\n    socket.on('connect', () => {\n      console.log('WebSocket connected successfully');\n      setSocketConnected(true);\n      // You might want to update the UI to show the connected state\n    });\n\n    // ... other socket event listeners ...\n\n    socket.on('map_updated', updatedMap => {\n      setMindMap(updatedMap);\n    });\n    socket.on('error', error => {\n      console.error('Socket error:', error);\n      // Handle the error (e.g., show a message to the user)\n    });\n    socket.on('connect_error', error => {\n      console.error('Socket connection error:', error);\n      setSocketConnected(false);\n    });\n    return () => {\n      socket.off('connect');\n      socket.off('map_updated');\n      socket.off('error');\n      socket.off('connect_error');\n      // ... remove other listeners ...\n    };\n  }, []);\n\n  // useEffect(() => {\n  //   console.log('mindMap state changed:', mindMap);\n  // }, [mindMap]);\n\n  const handleChatInput = async input => {\n    try {\n      const response = await axios.post(`${API_URL}/api/generate_map`, {\n        input: input\n      });\n      console.log('Received mind map data:', response.data);\n      setMindMap(response.data);\n    } catch (error) {\n      console.error('Error generating mind map:', error);\n      if (error.response && error.response.data && error.response.data.error) {\n        alert(`Error: ${error.response.data.error}`);\n      } else {\n        alert('An error occurred while generating the mind map. Please try again.');\n      }\n    }\n  };\n  const handleMapUpdate = changes => {\n    // send update to the server\n    if (changes.updatedNode) {\n      const updateNode = node => {\n        if (node.name === changes.updatedNode.id) {\n          return {\n            ...node,\n            name: changes.updatedNode.data.label,\n            attributes: {\n              notes: changes.updateNode.data.note\n            }\n          };\n        }\n        if (node.children) {\n          return {\n            ...node,\n            children: node.children.map(updateNode)\n          };\n        }\n        return node;\n      };\n      const updatedMap = updateNode(mindMap);\n      setMindMap(updatedMap);\n      socket.emit('update_map', {\n        map: updatedMap,\n        changes\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Socket status: \", socket.connected ? 'Connected' : 'Disconnected']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), mindMap ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(MindMap, {\n          data: mindMap,\n          onUpdate: handleMapUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No mind map data available. Please enter some text.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        borderTop: '1px solid #ccc',\n        padding: '50px 50px'\n      },\n      children: /*#__PURE__*/_jsxDEV(ChatInterface, {\n        onSubmit: handleChatInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"UT0+dEJduCNPdLBoXsgmen7lXtU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","io","axios","MindMap","ChatInterface","jsxDEV","_jsxDEV","Fragment","_Fragment","API_URL","process","env","REACT_APP_API_URL","SOCKET_URL","REACT_APP_SOCKET_URL","socket","App","_s","mindMap","setMindMap","socketConnected","setSocketConnected","console","log","on","updatedMap","error","off","handleChatInput","input","response","post","data","alert","handleMapUpdate","changes","updatedNode","updateNode","node","name","id","label","attributes","notes","note","children","map","emit","className","style","display","flexDirection","height","connected","fileName","_jsxFileName","lineNumber","columnNumber","onUpdate","borderTop","padding","onSubmit","_c","$RefreshReg$"],"sources":["C:/Users/alexa/chat_based_mmapp/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\nimport axios from 'axios';\r\nimport MindMap from './components/MindMap';\r\nimport ChatInterface from './components/ChatInterface';\r\nimport './App.css';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\r\nconst SOCKET_URL = process.env.REACT_APP_SOCKET_URL || 'http://localhost:5000';\r\n\r\nconst socket = io(SOCKET_URL);\r\n\r\nfunction App() {\r\n  const [mindMap, setMindMap] = useState(null);\r\n  const [socketConnected, setSocketConnected] = useState(false);\r\n\r\n  // Error handling\r\n  useEffect(() => {\r\n    console.log('Attempting to connect to WebSocket...');\r\n  \r\n    socket.on('connect', () => {\r\n      console.log('WebSocket connected successfully');\r\n      setSocketConnected(true);\r\n      // You might want to update the UI to show the connected state\r\n    });\r\n  \r\n    // ... other socket event listeners ...\r\n\r\n    socket.on('map_updated', (updatedMap) => {\r\n      setMindMap(updatedMap);\r\n    });\r\n\r\n    socket.on('error', (error) => {\r\n      console.error('Socket error:', error);\r\n      // Handle the error (e.g., show a message to the user)\r\n    });\r\n\r\n    socket.on('connect_error', (error) => {\r\n      console.error('Socket connection error:', error);\r\n      setSocketConnected(false);\r\n    });\r\n\r\n  \r\n    return () => {\r\n      socket.off('connect');\r\n      socket.off('map_updated');\r\n      socket.off('error');\r\n      socket.off('connect_error');\r\n      // ... remove other listeners ...\r\n    };\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   console.log('mindMap state changed:', mindMap);\r\n  // }, [mindMap]);\r\n\r\n  const handleChatInput = async (input) => {\r\n    try {\r\n      const response = await axios.post(`${API_URL}/api/generate_map`, { input: input });\r\n      console.log('Received mind map data:', response.data)\r\n      setMindMap(response.data);\r\n    } catch (error) {\r\n      console.error('Error generating mind map:', error);\r\n      if (error.response && error.response.data && error.response.data.error) {\r\n        alert(`Error: ${error.response.data.error}`);\r\n      } else {\r\n        alert('An error occurred while generating the mind map. Please try again.');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleMapUpdate = (changes) => {\r\n    // send update to the server\r\n    if (changes.updatedNode) {\r\n      const updateNode = (node) => {\r\n        if (node.name === changes.updatedNode.id) {\r\n          return { ...node, name: changes.updatedNode.data.label, attributes: { notes: changes.updateNode.data.note } };\r\n        }\r\n        if (node.children) {\r\n          return { ...node, children: node.children.map(updateNode) };\r\n        }\r\n        return node;\r\n      };\r\n      const updatedMap = updateNode(mindMap);\r\n      setMindMap(updatedMap);\r\n      socket.emit('update_map', { map: updatedMap, changes });\r\n    } \r\n  };\r\n\r\n  return (\r\n    <div className=\"App\" style={{ display: 'flex', flexDirection: 'column', height: '100vh' }}>\r\n      <div>\r\n        <p>Socket status: {socket.connected ? 'Connected' : 'Disconnected'}</p>\r\n        {mindMap ? (\r\n          <>\r\n            <MindMap data={mindMap} onUpdate={handleMapUpdate} />\r\n            {/* <pre>{JSON.stringify(mindMap, null, 2)}</pre> */}\r\n          </>\r\n        ) : (\r\n          <p>No mind map data available. Please enter some text.</p>\r\n        )}\r\n      </div>\r\n      <div style={{ borderTop: '1px solid #ccc', padding: '50px 50px' }}>\r\n        <ChatInterface onSubmit={handleChatInput} />\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}